#include "pch.h"
#include "PickUp.h"
#include "utils.h"
#include "Player.h"
#include "GameObject.h"
#include "Scene.h"

PickUp::PickUp(const Vector2f& position, const Vector2f& scale, float rotation, GameObject* pOwner, Scene* pScene)
: GameObject(position, scale, rotation, pScene)
, m_pOwner(pOwner)
, m_InWorld(true)
{
	m_MaxAcceleration = 100.f;
	m_Friction = 1.f;
}

PickUp::~PickUp()
{
}

void PickUp::Update(float dt)
{
	if(m_InWorld)
	{
		Point2f pos = m_Position.ToPoint2f();
		Point2f ownerPos = m_pOwner->GetPosition().ToPoint2f();
		Vector2f direction { pos, ownerPos };
		
		Player* pPlayer = dynamic_cast<Player*>(m_pOwner);
		
		if(pPlayer)
		{
			if(direction.Length() < 20.f && pPlayer->HasEmptySlot())
			{
				// TODO(tomas): any gameobject should have a process pickup function if it has an inventory. Look at this later
				pPlayer->ProcessPickUp(this);
				m_InWorld = false;
			}
		}
	}
	
	GameObject::Update(dt);
}

void PickUp::Draw() const 
{
	glColor4f(0.f, 0.f, 1.f, 1.f);

	glPushMatrix();
	glTranslatef(m_Position.x, m_Position.y, m_ZLayer);
	glRotatef(m_Rotation, 0.f, 0.f, 1.f);
	glScalef(m_Scale.x, m_Scale.y, 0.f);
	
	utils::FillRect(-5.f, -5.f, 10.f, 10.f);
	
	GameObject::Draw();
	glPopMatrix();
}